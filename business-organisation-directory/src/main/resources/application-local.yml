spring:
  datasource:
    url: jdbc:postgresql://localhost:5435/business-organisation-directory?currentSchema=business_organisation_directory
    username: user
    password: pwd
    driver-class-name: org.postgresql.Driver
  application:
    name: business-organisation-directory
  jpa:
    open-in-view: false
    properties:
      hibernate:
        jdbc:
          batch_size: 500
  jmx:
    enabled: true
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: https://login.microsoftonline.com/2cda5d11-f0ac-46b3-967d-af1b2e1bd01a/v2.0
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      auto-offset-reset: earliest
      enable-auto-commit: true
      properties:
        spring:
          json:
            trusted:
              packages: "*"
        max:
          poll:
            interval:
              ms: 1200000
    producer:
      properties:
        max:
          request:
            size: 3000000
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      retries: 1

kafka:
  atlas:
    mail:
      topic: atlas.mail
      groupId: atlas.kafka.mail.groupId
    user:
      administration:
        topic: atlas.user.administration
        groupId: atlas.kafka.bodi.user.administration.groupId
    business:
      organisation:
        topic: atlas.business.organisation
        groupId: atlas.kafka.bodi.business.organisation.groupId
    transport:
      company:
        topic: atlas.transport.company
        groupId: atlas.kafka.bodi.transport.company.groupId
auth:
  audience:
    service-name: 87e6e634-6ba1-4e7a-869d-3348b4c3eafc
server:
  port: 8083
  error:
    include-message: always
management:
  endpoint:
    health:
      show-details: always
  endpoints:
    web:
      exposure:
        include: health, info, metrics
info:
  app:
    name: business-organisation-directory
    version: @version@
    buildtime: @timestamp@
logging:
  level:
    root: INFO
    org.hibernate: ERROR
external:
  bav:
    url: https://www.output.tu-verzeichnisse.bav.admin.ch
    # Environment Variables used for CRD can be found in the restricted access page for passwords
  crd:
    url: https://crd.rne.eu/CRD/services/CRDRFDataReplicationWS
    username: fs10651_li
    password: ${CRD_PASSWORD}
    keystore: classpath:crd/keystore.jks
    keystore-password: ${CRD_KEYSTORE_PASSWORD}
    keystore-alias: atlas.app.sbb.ch
    truststore: classpath:crd/rne-truststore.jks
    truststore-password: ${CRD_TRUSTSTORE_PASSWORD}
mail:
  receiver:
    tu-relations-report: TechSupport-ATLAS@sbb.ch
amazon:
  region: "eu-central-1"
  bucketConfigs:
    export-files:
      accessKey: ${AMAZON_S3_ACCESS_KEY}
      secretKey: ${AMAZON_S3_SECRET_KEY}
      bucketName: "atlas-data-export-dev-dev"
      objectExpirationDays: 30

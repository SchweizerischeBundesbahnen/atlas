{
  "$schema": "https://clew-resources.sbb-cloud.net/tekton-schema.json",
  "productName": "atlas",
  "advancedBuildSettings": {
    "buildWorkspaceSize": "25Gi",
    "buildCacheSize": "10Gi",
    "taggingWorkspaceSize": "2Gi",
    "pipelineTimeout": "1h30m0s"
  },
  "builder": {
    "java": "21",
    "node": "18"
  },
  "mvn": {
    "parentPom": "pom.xml",
    "deployableArtifactsPom": "pom.xml",
    "artifactoryMavenRepo": "atlas.mvn",
    "buildTaskName": "esta-maven-build-extra-large"
  },
  "docker": [
    {
      "dockerFile": "line-directory/docker/Dockerfile",
      "imageName": "line-directory",
      "artifactoryDockerRepo": "atlas.docker"
    },
    {
      "dockerFile": "business-organisation-directory/docker/Dockerfile",
      "imageName": "business-organisation-directory",
      "artifactoryDockerRepo": "atlas.docker"
    },
    {
      "dockerFile": "service-point-directory/docker/Dockerfile",
      "imageName": "service-point-directory",
      "artifactoryDockerRepo": "atlas.docker"
    },
    {
      "dockerFile": "prm-directory/docker/Dockerfile",
      "imageName": "prm-directory",
      "artifactoryDockerRepo": "atlas.docker"
    },
    {
      "dockerFile": "import-service-point/docker/Dockerfile",
      "imageName": "import-service-point",
      "artifactoryDockerRepo": "atlas.docker"
    },
    {
      "dockerFile": "export-service-point/docker/Dockerfile",
      "imageName": "export-service-point",
      "artifactoryDockerRepo": "atlas.docker"
    },
    {
      "imageName": "mail",
      "dockerFile": "mail/docker/Dockerfile",
      "artifactoryDockerRepo": "atlas.docker"
    },
    {
      "imageName": "scheduling",
      "dockerFile": "scheduling/docker/Dockerfile",
      "artifactoryDockerRepo": "atlas.docker"
    },
    {
      "artifactoryDockerRepo": "atlas.docker",
      "dockerFile": "gateway/docker/Dockerfile",
      "imageName": "gateway"
    },
    {
      "dockerFile": "user-administration/docker/Dockerfile",
      "imageName": "user-administration",
      "artifactoryDockerRepo": "atlas.docker"
    },
    {
      "artifactoryDockerRepo": "atlas.docker",
      "dockerFile": "workflow/docker/Dockerfile",
      "imageName": "workflow"
    },
    {
      "artifactoryDockerRepo": "atlas.docker",
      "dockerFile": "location/docker/Dockerfile",
      "imageName": "location"
    },
    {
      "dockerFile": "frontend/docker/Dockerfile",
      "imageName": "atlas-frontend",
      "artifactoryDockerRepo": "atlas.docker",
      "contextDir": "frontend"
    }
  ],
  "pipelines": [
    {
      "name": "continuous",
      "triggerType": [
        "GITEVENT"
      ],
      "branchNamePrefixes": [
        "feature"
      ],
      "build": {
        "buildDockerImage": false,
        "additionalBuildParams": "-Dskip.npm.exec.ci=false -Dskip.npm.exec.build=false -Dskip.npm.exec.test=false -Dskip.npm.exec.ci=false -Dsonar.exclusions=**/node_modules/**,**/src/app/api/**,**/*.spec.ts,**/*.module.ts,**/*.routes.ts,**/karma.conf.js,**/instana.js,**/polyfills.ts,**/cypress/**",
        "sonarScan": {
          "enabled": true
        },
        "failOnQualityGateFailure": true
      }
    },
    {
      "name": "manualRelease",
      "branchNamePrefixes": [
        "master"
      ],
      "triggerType": [
        "USER"
      ],
      "build": {
        "buildDockerImage": true,
        "additionalBuildParams": "-Dskip.npm.exec.ci=false -Dskip.npm.exec.build=false -Dskip.npm.exec.publish=false -Dskip.npm.exec.test=false -Dskip.npm.exec.ci=false -DskipITs -Dsonar.exclusions=**/node_modules/**,**/src/app/api/**,**/*.spec.ts,**/*.module.ts,**/*.routes.ts,**/karma.conf.js,**/instana.js,**/polyfills.ts,**/cypress/**",
        "sonarScan": {
          "enabled": true
        },
        "failOnQualityGateFailure": true,
        "owaspDependencyCheck": {
          "enabled": true,
          "additionalParams": "--disableNodeAudit"
        }
      },
      "stages": [
        "dev",
        "test"
      ]
    },
    {
      "name": "taggingMinor",
      "enabled": true,
      "tagging": {
        "updateHelmChart": true,
        "versionIncrementPosition": "minor"
      },
      "branchNamePrefixes": [
        "master"
      ],
      "triggerType": [
        "GITEVENT"
      ]
    },
    {
      "name": "release",
      "triggerType": [
        "GITEVENT"
      ],
      "tagging": {
        "versionIncrementPosition": "minor"
      },
      "versionTagEventPatterns": [
        "^(\\d+\\.)?(\\d+\\.)?(\\*|\\d+)$"
      ],
      "build": {
        "deployArtifacts": true,
        "buildDockerImage": true,
        "additionalBuildParams": "-Dskip.npm.exec.ci=false -Dskip.npm.exec.build=false -Dskip.npm.exec.publish=false -Dskip.npm.exec.test=false -Dskip.npm.exec.ci=false -DskipITs -Dsonar.exclusions=**/node_modules/**,**/src/app/api/**,**/*.spec.ts,**/*.module.ts,**/*.routes.ts,**/karma.conf.js,**/instana.js,**/polyfills.ts,**/cypress/**",
        "sonarScan": {
          "releaseBranchName": "master",
          "enabled": true
        },
        "owaspDependencyCheck": {
          "enabled": true,
          "additionalParams": "--disableNodeAudit"
        },
        "failOnQualityGateFailure": true
      },
      "stages": [
        "dev",
        "test"
      ]
    }
  ],
  "stages": [
    {
      "stageName": "dev",
      "argoCD": {
        "waitUntilHealthy": true,
        "argoCdAppName": "applications.argoproj.io/app-name=atlas-dev",
        "argoCdAppSyncFlags": "-l",
        "autoSync": true
      },
      "helm": {
        "sourceRepository": "https://code.sbb.ch/scm/ki_atlas/atlas-argocd.git",
        "chartFilePath": "./clusters/aws01t/atlas-dev/values.yaml",
        "versionProperties": [
          ".appVersion"
        ]
      }
    },
    {
      "stageName": "test",
      "helm": {
        "sourceRepository": "https://code.sbb.ch/scm/ki_atlas/atlas-argocd.git",
        "chartFilePath": "./clusters/aws01t/atlas-test/values.yaml",
        "versionProperties": [
          ".appVersion"
        ]
      }
    }
  ],
  "notifications": [
    {
      "type": "TEAMS",
      "enabled": true,
      "eventTypes": [
        "SUCCESS",
        "FAILURE",
        "ABORTED"
      ],
      "webhookSecretName": "esta-tekton-pipeline-env"
    }
  ]
}


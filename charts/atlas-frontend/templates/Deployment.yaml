kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ .Chart.Name }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
      deploymentconfig: {{ .Chart.Name }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        collectord.io/logs-index: '{{ .Values.splunkIndex }}'
        collectord.io/logs-output: splunk::prod
      labels:
        app: '{{ .Chart.Name }}'
        deploymentconfig: '{{ .Chart.Name }}'
    spec:
      containers:
        - image: 'atlas.docker.bin.sbb.ch/atlas-frontend:{{ .Values.versionTag | default .Chart.AppVersion }}'
          imagePullPolicy: Always
          name: {{ .Chart.Name }}
          env:
            - name: PRODUCTION
              value: '{{ .Values.production }}'
            - name: ENVIRONMENT_LABEL
              value: '{{ .Values.environmentLabel }}'
            - name: TTFN_BACKEND_URL
              value: '{{ .Values.ttfnBackendUrl }}'
            - name: LIDI_BACKEND_URL
              value: '{{ .Values.lidiBackendUrl }}'
          ports:
            - containerPort: 8080
          livenessProbe:
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            timeoutSeconds: 30
            periodSeconds: 20
            successThreshold: 1
            failureThreshold: 10
          readinessProbe:
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            timeoutSeconds: 30
            periodSeconds: 20
            successThreshold: 1
            failureThreshold: 10
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      terminationGracePeriodSeconds: 30




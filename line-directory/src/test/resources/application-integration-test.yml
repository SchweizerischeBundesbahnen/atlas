spring:
  datasource:
    driver-class-name: org.h2.Driver
    url: jdbc:h2:mem:db;DB_CLOSE_DELAY=-1
    username: sa
    password: sa
  h2:
    console:
      enabled: true
      path: /h2-console
  main:
    banner-mode: OFF
  jpa:
    show-sql: false
    properties:
      hibernate:
        format_sql: true
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: https://login.microsoftonline.com/2cda5d11-f0ac-46b3-967d-af1b2e1bd01a/v2.0
  kafka:
    bootstrap-servers: .bootstrap-servers=${spring.embedded.kafka.brokers}

auth:
  audience:
    service-name: 87e6e634-6ba1-4e7a-869d-3348b4c3eafc

logging:
  level:
    root: ERROR
    org:
      hibernate: ERROR
      jboss: ERROR
      springframework:
        core: fatal
        beans: fatal
        context: fatal
        transaction: error
        boot:
          test: error
        test: error
        web: error
    ch.sbb.atlas.api.model.ErrorResponse: off
info:
  app:
    name: line-directory
    version: @version@
amazon:
  region: "eu-central-1"
  bucketConfigs:
    export-files:
      accessKey: ${AMAZON_S3_ACCESS_KEY}
      secretKey: ${AMAZON_S3_SECRET_KEY}
      bucketName: "atlas-data-export-dev-dev"
      objectExpirationDays: 30
    hearing-documents:
      accessKey: ${AMAZON_S3_HEARING_DOCS_ACCESS_KEY}
      secretKey: ${AMAZON_S3_HEARING_DOCS_SECRET_KEY}
      bucketName: "atlas-hearing-documents-dev-dev"
      objectExpirationDays: 100000

kafka:
  atlas:
    user:
      administration:
        topic: atlas.user.administration
        groupId: atlas.kafka.lidi.user.administration.groupId
    business:
      organisation:
        topic: atlas.business.organisation
        groupId: atlas.kafka.lidi.business.organisation.groupId
    transport:
      company:
        topic: atlas.transport.company
        groupId: atlas.kafka.lidi.transport.company.groupId

atlas:
  client:
    gateway:
      url: "http://localhost:8888"

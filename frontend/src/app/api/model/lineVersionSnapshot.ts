/**
 * Atlas API
 * This is the API for all your needs SKI core data<br/><br/>Atlas serves the following applications:<br/><ul><li>line-directory:1.119.0<br/>RestDoc: <a href=\'https://line-directory.dev.app.sbb.ch/static/rest-api.html\' target=\'_blank\'>https://line-directory.dev.app.sbb.ch/static/rest-api.html</a></li><li>business-organisation-directory:1.119.0<br/>RestDoc: <a href=\'https://business-organisation-directory.dev.app.sbb.ch/static/rest-api.html\' target=\'_blank\'>https://business-organisation-directory.dev.app.sbb.ch/static/rest-api.html</a></li><li>workflow:1.119.0<br/>RestDoc: <a href=\'https://workflow.dev.app.sbb.ch/static/rest-api.html\' target=\'_blank\'>https://workflow.dev.app.sbb.ch/static/rest-api.html</a></li><li>user-administration:1.119.0<br/>RestDoc: <a href=\'https://user-administration.dev.app.sbb.ch/static/rest-api.html\' target=\'_blank\'>https://user-administration.dev.app.sbb.ch/static/rest-api.html</a></li></ul>
 *
 * The version of the OpenAPI document: 1.119.0
 * Contact: TechSupport-ATLAS@sbb.ch
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { Status } from './status';
import { PaymentType } from './paymentType';
import { LineType } from './lineType';

export interface LineVersionSnapshot {
  /**
   * Object creation date
   */
  readonly creationDate?: string;
  /**
   * User creator
   */
  readonly creator?: string;
  /**
   * Last edition date
   */
  readonly editionDate?: string;
  /**
   * User editor
   */
  readonly editor?: string;
  /**
   * Technical identifier
   */
  readonly id?: number;
  /**
   * Workflow Technical identifier
   */
  readonly workflowId?: number;
  /**
   * Workflow Status
   */
  readonly workflowStatus?: LineVersionSnapshot.WorkflowStatusEnum;
  /**
   * Parent Object identifier
   */
  readonly parentObjectId?: number;
  status?: Status;
  lineType: LineType;
  /**
   * SLNID
   */
  readonly slnid?: string;
  paymentType?: PaymentType;
  /**
   * Number
   */
  readonly number?: string;
  /**
   * AlternativeName
   */
  readonly alternativeName?: string;
  /**
   * CombinationName
   */
  readonly combinationName?: string;
  /**
   * LongName
   */
  readonly longName?: string;
  /**
   * Color of the font in RGB
   */
  readonly colorFontRgb?: string;
  /**
   * Color of the background in RGB
   */
  readonly colorBackRgb?: string;
  /**
   * Color of the font in CMYK
   */
  readonly colorFontCmyk?: string;
  /**
   * Color of the background in CMYK
   */
  readonly colorBackCmyk?: string;
  /**
   * Icon
   */
  readonly icon?: string;
  /**
   * Description
   */
  readonly description?: string;
  /**
   * Valid from
   */
  readonly validFrom?: Date;
  /**
   * Valid to
   */
  readonly validTo?: Date;
  /**
   * BusinessOrganisation SBOID
   */
  readonly businessOrganisation?: string;
  /**
   * Comment
   */
  readonly comment?: string;
  /**
   * Optimistic locking version - instead of ETag HTTP Header (see RFC7232:Section 2.3)
   */
  readonly etagVersion?: number;
}
export namespace LineVersionSnapshot {
  export type WorkflowStatusEnum =
    | 'ADDED'
    | 'STARTED'
    | 'REVISION'
    | 'HEARING'
    | 'APPROVED'
    | 'REJECTED';
  export const WorkflowStatusEnum = {
    Added: 'ADDED' as WorkflowStatusEnum,
    Started: 'STARTED' as WorkflowStatusEnum,
    Revision: 'REVISION' as WorkflowStatusEnum,
    Hearing: 'HEARING' as WorkflowStatusEnum,
    Approved: 'APPROVED' as WorkflowStatusEnum,
    Rejected: 'REJECTED' as WorkflowStatusEnum,
  };
}

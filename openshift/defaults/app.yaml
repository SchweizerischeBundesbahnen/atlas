apiVersion: v1
kind: Template
metadata:
  name: ${PRODUCT}${SEPARATOR}${VARIANT}-app-template
  labels:
    app: ${PRODUCT}${SEPARATOR}${VARIANT}
    createdBy: sbb-it
objects:
  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      name: ${PRODUCT}${SEPARATOR}${VARIANT}
    spec:
      replicas: ${{REPLICAS}}
      test: false
      selector:
        app: ${PRODUCT}${SEPARATOR}${VARIANT}
        deploymentconfig: ${PRODUCT}${SEPARATOR}${VARIANT}
      strategy:
        type: Rolling
      template:
        metadata:
          annotations:
            collectord.io/logs-index: ${SPLUNK_INDEX}
            collectord.io/logs-output: splunk::prod
            collectord.io/logs-eventpattern: '^(timestamp=)'
          labels:
            app: ${PRODUCT}${SEPARATOR}${VARIANT}
            deploymentconfig: ${PRODUCT}${SEPARATOR}${VARIANT}
        spec:
          containers:
            - env:
                - name: SPRING_PROFILES_ACTIVE
                  value: ${SPRING_PROFILES_ACTIVE}
                - name: DB_USER
                  valueFrom:
                    secretKeyRef:
                      name: db-secret-${PRODUCT}
                      key: user
                - name: DB_PWD
                  valueFrom:
                    secretKeyRef:
                      name: db-secret-${PRODUCT}
                      key: password
              image: atlas.docker.bin.sbb.ch/${IMAGE_NAME}:${VERSIONTAG}
              imagePullPolicy: ${IMAGE_PULL_POLICY}
              name: ${PRODUCT}${SEPARATOR}${VARIANT}
              ports:
                - containerPort: ${{PORT}}
                  protocol: TCP
              resources:
                requests:
                  cpu: ${CPU_MIN}
                  memory: ${MEMORY_MIN}
                limits:
                  cpu: ${CPU_MAX}
                  memory: ${MEMORY_MAX}
              livenessProbe:
                httpGet:
                  path: ${LIVENESS_PROBE}
                  port: ${{PORT}}
                  scheme: HTTP
                initialDelaySeconds: 40
                timeoutSeconds: 90
                periodSeconds: 20
                successThreshold: 1
                failureThreshold: 10
              readinessProbe:
                httpGet:
                  path: ${READYNESS_PROBE}
                  port: ${{PORT}}
                  scheme: HTTP
                initialDelaySeconds: 30
                timeoutSeconds: 90
                periodSeconds: 20
                successThreshold: 1
                failureThreshold: 10
              terminationMessagePath: /dev/termination-log
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          securityContext: {}
          terminationGracePeriodSeconds: 30
          triggers: {}

  - kind: Route
    apiVersion: v1
    metadata:
      annotations:
        openshift.io/host.generated: "true"
      name: ${PRODUCT}${SEPARATOR}${VARIANT}
    spec:
      host: ${PRODUCT}-${SPRING_PROFILES_ACTIVE}.${CLUSTER_APPLICATIONS_URL}
      port:
        targetPort: ${PORT}-tcp
      to:
        kind: Service
        name: ${PRODUCT}${SEPARATOR}${VARIANT}
        weight: 100
      tls:
        termination: edge
        insecureEdgeTerminationPolicy: Allow

  - kind: Service
    apiVersion: v1
    metadata:
      name: ${PRODUCT}${SEPARATOR}${VARIANT}
    spec:
      ports:
        - name: ${PORT}-tcp
          port: ${{PORT}}
          protocol: TCP
          targetPort: ${{PORT}}
      selector:
        app: ${PRODUCT}${SEPARATOR}${VARIANT}
        deploymentconfig: ${PRODUCT}${SEPARATOR}${VARIANT}
      sessionAffinity: None
      type: ClusterIP


parameters:
  - name: PRODUCT
    description: PRODUCT is the name of the product / app name
    required: true
  - name: VARIANT
    description: VARIANT is an option to put an variation to the deploymentconfig name.
    required: false
  - name: SEPARATOR
    description: SEPARATOR is an option to put an variation to the deploymentconfig name.
    required: false
  - name: IMAGE_NAME
    description: Name of the Dockerimge in bin.sbb.ch/dockerrepo
    required: true
  - name: IMAGE_PULL_POLICY
    descrition: See https://docs.openshift.com/container-platform/3.6/dev_guide/managing_images.html#image-pull-policy
  - name: REPLICAS
    description: Pod Instances Count
    required: true
    value: "1"
  - name: SPLUNK_INDEX
    description: Splunk index to write to
    required: true
  - name: PORT
    description: Application Port
    required: true
  - name: CPU_MIN
    description: Minimal CPU ie. 1m for 1 Milicore
    required: true
  - name: CPU_MAX
    description: Maximal CPU ie 1 for 1 Core
    required: true
  - name: MEMORY_MIN
    description: Minimal Memory ie 1M for 1 Megabyte
    required: true
  - name: MEMORY_MAX
    description: Maximal Memory ie 1G for 1 Gigabyte
    required: true
  - name: READYNESS_PROBE
    description: READYNESS_PROBE
    required: true
  - name: LIVENESS_PROBE
    description: LIVENESS_PROBE
    required: true
  - name: VERSIONTAG
    description: Selector-Tag for Artifactory
    required: true
  - name: CLUSTER_APPLICATIONS_URL
    description: Cluster URL for applications from https://confluence.sbb.ch/display/CLEW/OpenShift+4+on+AWS+Cluster+Introduction#OpenShift4onAWSClusterIntroduction-Cluster-specificURLs
    required: true
  - name: SPRING_PROFILES_ACTIVE
    description: spring profile for the environment
    required: true
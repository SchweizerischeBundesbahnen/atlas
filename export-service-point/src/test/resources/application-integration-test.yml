spring:
  datasource:
    service-point:
      driver-class-name: org.h2.Driver
      url: jdbc:h2:mem:servicepoint;DB_CLOSE_ON_EXIT=FALSE
      username: sa
      password: sa
    hikari:
      minimumIdle: 2
      maximumPoolSize: 10
      idleTimeout: 120000
      connectionTimeout: 300000
      leakDetectionThreshold: 300000
  batch:
    datasource:
      driver-class-name: org.h2.Driver
      url: jdbc:h2:mem:batch;DB_CLOSE_ON_EXIT=FALSE
      username: sa
      password: sa
    jdbc:
      initialize-schema: NEVER
      isolation-level-for-create: default
    job:
      enabled: false

  h2:
    console:
      enabled: true
      path: /h2-console

  main:
    banner-mode: OFF
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: https://login.microsoftonline.com/2cda5d11-f0ac-46b3-967d-af1b2e1bd01a/v2.0
      client:
        provider:
          azure:
            issuer-uri: https://login.microsoftonline.com/2cda5d11-f0ac-46b3-967d-af1b2e1bd01a/v2.0
        registration:
          azure:
            authorization-grant-type: client_credentials
            client-id: ${SCHEDULING_CLIENT_ID}
            client-secret: ${SCHEDULING_CLIENT_SECRET}
            scope:
              - api://87e6e634-6ba1-4e7a-869d-3348b4c3eafc/.default
#  sql:
#    init:
#      mode: always
#      schema-locations: classpath:service-point-data.json-schema.sql

auth:
  audience:
    service-name: 87e6e634-6ba1-4e7a-869d-3348b4c3eafc

logging:
  level:
    root: INFO
    org:
      hibernate: ERROR
      jboss: ERROR
      springframework:
        core: fatal
        beans: fatal
        context: fatal
        transaction: error
        boot:
          test: error
        test: error
        web: error
info:
  app:
    name: export-service-point
    version: '@version@'

kafka:
  enabled: false
  atlas:
    user:
      administration:
        topic: atlas.user.administration
        groupId: atlas.kafka.lidi.user.administration.groupId
    mail:
      topic: atlas.mail
      groupId: atlas.kafka.mail.groupId

atlas:
  client:
    gateway:
      url: "http://localhost:8888"

mail:
  receiver:
    export-service-point: TechSupport-ATLAS@sbb.ch

amazon:
  region: "eu-central-1"
  bucketConfigs:
    export-files:
      accessKey: ${AMAZON_S3_ACCESS_KEY}
      secretKey: ${AMAZON_S3_SECRET_KEY}
      bucketName: "atlas-data-export-dev-dev"
      objectExpirationDays: 30



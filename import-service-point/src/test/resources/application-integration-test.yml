spring:
  datasource:
    driver-class-name: org.h2.Driver
    url: jdbc:h2:mem:db;DB_CLOSE_DELAY=-1
    username: sa
    password: sa
  batch:
    jdbc:
      initialize-schema: NEVER
      isolation-level-for-create: default
    job:
      enabled: false

  h2:
    console:
      enabled: true
      path: /h2-console
  jpa:
    open-in-view: false
    properties:
      hibernate:
        #    show-sql: true
        #        format_sql: true
        order_inserts: true
        jdbc:
          batch_size: 500
  main:
    banner-mode: OFF
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: https://login.microsoftonline.com/2cda5d11-f0ac-46b3-967d-af1b2e1bd01a/v2.0
      client:
        provider:
          azure:
            issuer-uri: https://login.microsoftonline.com/2cda5d11-f0ac-46b3-967d-af1b2e1bd01a/v2.0
        registration:
          azure:
            authorization-grant-type: client_credentials
            client-id: ${SCHEDULING_CLIENT_ID}
            client-secret: ${SCHEDULING_CLIENT_SECRET}
            scope:
              - api://87e6e634-6ba1-4e7a-869d-3348b4c3eafc/.default
  kafka:
    bootstrap-servers: .bootstrap-servers=${spring.embedded.kafka.brokers}

auth:
  audience:
    service-name: 87e6e634-6ba1-4e7a-869d-3348b4c3eafc

logging:
  level:
    root: ERROR
    org:
      hibernate: ERROR
      jboss: ERROR
      springframework:
        core: fatal
        beans: fatal
        context: fatal
        transaction: error
        boot:
          test: error
        test: error
        web: error
info:
  app:
    name: import-service-point
    version: '@version@'

kafka:
  enabled: false
  atlas:
    user:
      administration:
        topic: atlas.user.administration
        groupId: atlas.kafka.lidi.user.administration.groupId
    mail:
      topic: atlas.mail
      groupId: atlas.kafka.mail.groupId

atlas:
  client:
    gateway:
      url: "http://localhost:8888"

mail:
  receiver:
    import-service-point: TechSupport-ATLAS@sbb.ch

amazon:
  region: "eu-central-1"
  bucketConfigs:
    bulk-import:
      accessKey: ${AMAZON_S3_BULK_IMPORT_ACCESS_KEY}
      secretKey: ${AMAZON_S3_BULK_IMPORT_SECRET_KEY}
      bucketName: "atlas-bulk-import-dev-dev"
      objectExpirationDays: 365
